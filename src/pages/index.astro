---
import "../styles/global.css";
import BaseHead from "../components/BaseHead.astro";
import { getCollection } from "astro:content";
import BlogArticle from "../components/BlogArticle.astro";

const posts = (await getCollection("blog"))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 3);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title="Vallasc.com" description="My personal website" />
    <style>
      @keyframes blink {
        0%,
        100% {
          opacity: 1;
        }
        50% {
          opacity: 0;
        }
      }
      .animate-blink {
        animation: blink 0.8s steps(1) infinite;
      }
      #cursor {
        display: inline-block;
        vertical-align: baseline;
        position: relative;
        top: 0.1em;
      }

      /* Swiss style grid overlay */
      .swiss-grid {
        background-image: linear-gradient(
          to right,
          rgba(0, 0, 0, 0.03) 1px,
          transparent 1px
        );
        background-size: 8.33% 100%;
      }
      @media (max-width: 768px) {
        .swiss-grid {
          background-image: none;
        }
      }
    </style>
  </head>

  <body class="font-serif bg-[#fbf9f7]">
    <!-- Grid overlay -->
    <div class="swiss-grid fixed inset-0 pointer-events-none"></div>

    <div class="relative min-h-screen">
      <!-- Hero Section -->
      <div class="pt-32 px-8 md:px-24">
        <p class="font-mono text-sm text-gray-400 mb-4">Welcome</p>
        <div class="space-y-6">
          <h1
            class="text-4xl md:text-6xl font-bold tracking-tight leading-tight"
          >
            I'm Vallasc <span class="block sm:inline"
              >(aka Giacomo Vallorani)</span
            >
          </h1>
          <h1 class="text-4xl md:text-6xl font-bold tracking-tight">
            I'm a <span id="typed-text" class="text-red-800"></span>
            <span
              id="cursor"
              class="bg-red-800 inline-block w-[0.4em] h-[0.9em] align-bottom animate-blink"
            ></span>
          </h1>
        </div>

        <!-- Navigation -->
        <nav class="mt-16 py-4 border-t border-b overflow-x-auto">
          <div class="flex flex-wrap space-x-6 md:space-x-12">
            <a
              class="text-lg hover:text-red-800 transition-colors"
              href="/about">Me</a
            >
            <a class="text-lg hover:text-red-800 transition-colors" href="/blog"
              >Blog</a
            >
            <a
              class="text-lg hover:text-red-800 transition-colors"
              href="/projects">Projects</a
            >
            <a
              class="text-lg hover:text-red-800 transition-colors"
              href="https://github.com/Vallasc">GitHub</a
            >
            <a
              class="text-lg hover:text-red-800 transition-colors"
              href="https://linkedin.com/in/giacomovallorani">LinkedIn</a
            >
          </div>
        </nav>
      </div>

      <!-- Blog Posts Section -->
      <section class="mt-32 px-8 md:px-24">
        <h2 class="font-mono text-sm text-gray-400 mb-8">Latest Posts</h2>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-16">
          {
            posts.map((post) => (
              <BlogArticle
                id={post.id}
                title={post.data.title}
                description={post.data.description}
                pubDate={post.data.pubDate}
                lang={post.data.lang}
                readTime={post.data.readTime}
                tags={post.data.tags}
                compressed
              />
            ))
          }
        </div>
      </section>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const words = [
          "Software Engineer.",
          "Maker.",
          "Tech Enthusiast.",
          "Photographer.",
          "Human.",
        ];
        let wordIndex = 0;
        let charIndex = 0;
        let isDeleting = false;
        let isWaiting = false;
        const typingSpeed = 150;
        const deletingSpeed = 100;
        const pauseBetweenWords = 3000;
        const typedTextElement = document.getElementById("typed-text");
        const cursorElement = document.getElementById("cursor");

        function updateCursorAnimation() {
          if (isWaiting) {
            cursorElement!.classList.add("animate-blink");
          } else {
            cursorElement!.classList.remove("animate-blink");
          }
        }

        function typeEffect() {
          isWaiting = false;
          updateCursorAnimation();

          if (isDeleting) {
            charIndex--;
            typedTextElement!.textContent = words[wordIndex].slice(
              0,
              charIndex
            );
          } else {
            charIndex++;
            typedTextElement!.textContent = words[wordIndex].slice(
              0,
              charIndex
            );
          }

          if (!isDeleting && charIndex >= words[wordIndex].length) {
            isWaiting = true;
            updateCursorAnimation();
            setTimeout(() => {
              isWaiting = false;
              isDeleting = true;
              updateCursorAnimation();
              setTimeout(typeEffect, deletingSpeed);
            }, pauseBetweenWords);
            return;
          } else if (isDeleting && charIndex <= 0) {
            isDeleting = false;
            wordIndex = (wordIndex + 1) % words.length;
            isWaiting = true;
            updateCursorAnimation();
            setTimeout(() => {
              isWaiting = false;
              updateCursorAnimation();
              setTimeout(typeEffect, typingSpeed);
            }, 500);
            return;
          }

          setTimeout(typeEffect, isDeleting ? deletingSpeed : typingSpeed);
        }

        // Start with blinking cursor
        isWaiting = true;
        updateCursorAnimation();
        setTimeout(typeEffect, 1000);
      });
    </script>
  </body>
</html>
