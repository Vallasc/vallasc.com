---
import FormattedDate from "./FormattedDate.astro";

export interface Props {
  compressed?: boolean;
  id: string;
  title: string;
  pubDate: Date;
  description: string;
  lang: string;
  readTime: number;
  tags?: Array<string>;
}

const {
  id,
  title,
  description,
  pubDate,
  lang,
  readTime,
  tags,
  compressed = false,
} = Astro.props;
const tagsString =
  tags && tags.length > 0 ? tags.map((t) => t.toUpperCase()).join(", ") : "";
---

<article>
  <div class="mb-1 font-mono text-gray-400 sans-text font-light">
    {tagsString}&nbsp;
  </div>
  <a href={`/blog/${id}/`} class="block group">
    {
      compressed ? (
        <h3 class="mt-1 text-xl font-bold group-hover:text-red-800 transition-colors cursor-pointer">
          {title}
          <div class="inline text-red-800 hidden group-hover:inline">;</div>
        </h3>
      ) : (
        <h2 class="mt-1 text-2xl font-semibold group-hover:text-red-800 transition-colors cursor-pointer">
          {title}
          <div class="inline text-red-800 hidden group-hover:inline">;</div>
        </h2>
      )
    }
    <div class="mt-1">
      <p class="text-gray-800 font-sans line-clamp-3">{description}</p>
      <p class="mt-2 text-sm text-gray-400 font-mono font-light">
        <FormattedDate date={pubDate} /> - {lang} - {readTime} min
      </p>
    </div>
  </a>
</article>
